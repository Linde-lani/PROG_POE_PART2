@model part_2.Models.Claim

@{
    ViewData["Title"] = "Create";
}


<style>
    /* Container styling */
    .claim-form-container {
        max-width: 500px;
        margin: 50px auto;
        padding: 30px;
        background-color: #f9f9f9;
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        font-family: Arial, sans-serif;
    }

    /* Title styling */
    .submit-claim-title {
        text-align: center;
        color: #333;
        margin-bottom: 20px;
        font-size: 2em;
        font-weight: bold;
    }

    /* Heading styling */
    .claim-heading {
        text-align: left;
        color: #555;
        margin-bottom: 15px;
        font-size: 1.5em;
    }

    /* Form styling */
    form {
        display: flex;
        flex-direction: column;
    }

    /* Form group styling */
    .form-group {
        margin-bottom: 10px;
    }

    /* Labels styling */
    label {
        display: block;
        margin-bottom: 5px;
        font-weight: 600;
        color: #555;
    }

    /* Input styling */
    input[type="text"],
    input[type="number"],
    input[type="file"] {
        width: 100%;
        padding: 10px 12px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 1em;
        box-sizing: border-box;
        transition: border-color 0.3s, box-shadow 0.3s;
    }

        /* Focus state for inputs */
        input[type="text"]:focus,
        input[type="number"]:focus,
        input[type="file"]:focus {
            border-color: #007bff;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
            outline: none;
        }

    /* Button styling */
    .btn-primary {
        background-color: #007bff;
        border: none;
        padding: 12px;
        font-size: 1.1em;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s;
        width: fit-content;
        align-self: flex-start;
    }

        .btn-primary:hover {
            background-color: #0069d9;
        }

    /* Secondary button styling */
    .btn-secondary {
        margin-top: 10px;
        margin-bottom: 10px;
        padding: 10px 15px;
        font-size: 1em;
        border: none;
        border-radius: 4px;
        background-color: #6c757d;
        color: #fff;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
        }

    /* Validation message styling */
    .text-danger {
        color: #d9534f;
        font-size: 0.9em;
        margin-top: 3px;
        display: block;
    }

    /* Link styling */
    a {
        color: #007bff;
        text-decoration: none;
        margin-top: 15px;
        display: inline-block;
    }

        a:hover {
            text-decoration: underline;
        }

    .login-link {
        display: inline-block;
        padding: 10px 20px;
        background-color: #007bff; /* blue background */
        color: #fff; /* white text */
        text-decoration: none;
        border-radius: 4px;
        font-weight: bold;
        transition: background-color 0.3s, text-decoration 0.3s;
    }

        .login-link:hover {
            background-color: #0069d9; /* darker blue on hover */
            text-decoration: underline;
        }
</style>

<div class="claim-form-container">
    <h1 class="submit-claim-title">Submit Claim</h1>

    <h4 class="claim-heading">Claim</h4>

    <form asp-action="Create" class="form">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="form-group">
            <label asp-for="FacultyName" class="control-label"></label>
            <input asp-for="FacultyName" class="form-control" />
            <span asp-validation-for="FacultyName" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="ModuleName" class="control-label"></label>
            <input asp-for="ModuleName" class="form-control" />
            <span asp-validation-for="ModuleName" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Sessions" class="control-label"></label>
            <input asp-for="Sessions" class="form-control" />
            <span asp-validation-for="Sessions" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="TotalAmount" class="control-label"></label>
            <input asp-for="TotalAmount" class="form-control" />
            <span asp-validation-for="TotalAmount" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="SupportingDocuments" class="control-label">Supporting Documents</label>
            <input asp-for="SupportingDocuments" type="file" id="SupportingDocumentsFile" class="form-control" />
            <button type="button" class="btn btn-secondary" onclick="uploadSupportingDocument()">Upload</button>
            <p id="uploadedFileName"></p>
            <span asp-validation-for="SupportingDocuments" class="text-danger"></span>
        </div>

        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </form>
    <div>
        <p>
            <a href="@Url.Action("Index", "Claims")" class="login-link"> Track Claim</a>
            <a href="@Url.Action("Index", "Home")" class="login-link"> Go back to login</a>

        </p>
    </div>
</div>


<script>
    document.getElementById('Sessions').addEventListener('input', function () {
        const Sessions = 300;
        const count = parseInt(this.value) || 0;
        document.getElementById('TotalAmount').value = count * Sessions;
    });

    function uploadSupportingDocument() {
        var fileInput = document.getElementById('SupportingDocumentsFile');
        var file = fileInput.files[0];

        if (!file) {
            alert("Please select a file to upload.");
            return;
        }

        // Validate size (e.g., 5MB)
        if (file.size > 5 * 1024 * 1024) {
            alert("File exceeds 5MB size limit.");
            return;
        }

        // Check file type
        var allowedTypes = [
            'application/pdf',
            'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
        ];

        if (!allowedTypes.includes(file.type)) {
            alert("Invalid file type. Allowed: PDF, DOCX, XLSX.");
            return;
        }

        var formData = new FormData();
        formData.append('file', file);

        fetch('/Home/UploadSupportingDocument', {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                document.getElementById('uploadedFileName').innerText = "Uploaded: " + data.fileName;
                // Set the filename in the hidden input for form submission
                document.querySelector('input[name="SupportingDocuments"]').value = data.fileName;
            } else {
                alert(data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}